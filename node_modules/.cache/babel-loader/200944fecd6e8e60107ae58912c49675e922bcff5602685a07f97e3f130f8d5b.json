{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import EcoChart from'./EcoChart';// Assuming this chart handles general eco data\nimport DailyProgressChart from'./DailyProgressChart';// New chart for daily progress\nimport EcoTrackingForm from'./EcoTrackingForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[ecoData,setEcoData]=useState([]);const[dailyProgress,setDailyProgress]=useState([]);// State for daily progress data\nconst[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();const recordActivity=activity=>{console.log('Recording activity:',activity);};const fetchAllData=async()=>{const token=localStorage.getItem('accessToken');if(!token){navigate('/auth');return;}try{// Fetching general eco data\nconst ecoResponse=await axios.get('${process.env.REACT_APP_SERVER_URL}/api/eco-tracking/',{headers:{Authorization:`Bearer ${token}`}});setEcoData(ecoResponse.data);// Fetching daily progress data\nconst dailyProgressResponse=await axios.get('${process.env.REACT_APP_SERVER_URL}/api/eco-tracking/daily-progress/',{headers:{Authorization:`Bearer ${token}`}});setDailyProgress(dailyProgressResponse.data);setLoading(false);// Set loading to false after both requests succeed\n}catch(error){console.error('Error fetching data:',error);handleError(error);setLoading(false);// Stop loading if an error occurs\n}};const handleError=error=>{recordActivity({error:error.response?error.response.data:'Unknown error',status:error.response?error.response.status:'No status',message:error.message,timestamp:new Date().toISOString()});if(error.response){switch(error.response.status){case 401:setError('Session expired. Please log in again.');navigate('/auth');break;case 403:setError('Access denied. You do not have permission to view this data.');navigate('/auth');break;default:setError('Failed to fetch eco data. Please try again.');}}else{setError('Network error. Please check your connection.');}};useEffect(()=>{fetchAllData();// Fetch all data on component mount\n},[navigate]);const handleSubmitSuccess=newData=>{setEcoData(prevData=>[...prevData,newData]);fetchAllData();// Re-fetch all data after new submission\n};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Show loading state\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Eco Tracking Dashboard\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[error,/*#__PURE__*/_jsx(\"button\",{onClick:fetchAllData,children:\"Retry\"})]}),/*#__PURE__*/_jsx(EcoChart,{ecoData:ecoData}),dailyProgress.length>0?/*#__PURE__*/_jsx(DailyProgressChart,{data:dailyProgress}):/*#__PURE__*/_jsx(\"div\",{children:\"No daily progress data available.\"}),/*#__PURE__*/_jsx(EcoTrackingForm,{onSubmitSuccess:handleSubmitSuccess})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","EcoChart","DailyProgressChart","EcoTrackingForm","jsx","_jsx","jsxs","_jsxs","Dashboard","ecoData","setEcoData","dailyProgress","setDailyProgress","loading","setLoading","error","setError","navigate","recordActivity","activity","console","log","fetchAllData","token","localStorage","getItem","ecoResponse","get","headers","Authorization","data","dailyProgressResponse","handleError","response","status","message","timestamp","Date","toISOString","handleSubmitSuccess","newData","prevData","children","className","onClick","length","onSubmitSuccess"],"sources":["C:/Users/wande/Documents/Assessment/B9IS109-Eco-Track-System/EcoTrack System/ecotrack-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport EcoChart from './EcoChart';  // Assuming this chart handles general eco data\r\nimport DailyProgressChart from './DailyProgressChart';  // New chart for daily progress\r\nimport EcoTrackingForm from './EcoTrackingForm';\r\n\r\nconst Dashboard = () => {\r\n    const [ecoData, setEcoData] = useState([]);\r\n    const [dailyProgress, setDailyProgress] = useState([]); // State for daily progress data\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const recordActivity = (activity) => {\r\n        console.log('Recording activity:', activity);\r\n    };\r\n\r\n    const fetchAllData = async () => {\r\n        const token = localStorage.getItem('accessToken');\r\n\r\n        if (!token) {\r\n            navigate('/auth');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Fetching general eco data\r\n            const ecoResponse = await axios.get('${process.env.REACT_APP_SERVER_URL}/api/eco-tracking/', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setEcoData(ecoResponse.data);\r\n\r\n            // Fetching daily progress data\r\n            const dailyProgressResponse = await axios.get('${process.env.REACT_APP_SERVER_URL}/api/eco-tracking/daily-progress/', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setDailyProgress(dailyProgressResponse.data);\r\n\r\n            setLoading(false);  // Set loading to false after both requests succeed\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            handleError(error);\r\n            setLoading(false);  // Stop loading if an error occurs\r\n        }\r\n    };\r\n\r\n    const handleError = (error) => {\r\n        recordActivity({\r\n            error: error.response ? error.response.data : 'Unknown error',\r\n            status: error.response ? error.response.status : 'No status',\r\n            message: error.message,\r\n            timestamp: new Date().toISOString(),\r\n        });\r\n\r\n        if (error.response) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    setError('Session expired. Please log in again.');\r\n                    navigate('/auth');\r\n                    break;\r\n                case 403:\r\n                    setError('Access denied. You do not have permission to view this data.');\r\n                    navigate('/auth');\r\n                    break;\r\n                default:\r\n                    setError('Failed to fetch eco data. Please try again.');\r\n            }\r\n        } else {\r\n            setError('Network error. Please check your connection.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAllData();  // Fetch all data on component mount\r\n    }, [navigate]);\r\n\r\n    const handleSubmitSuccess = (newData) => {\r\n        setEcoData((prevData) => [...prevData, newData]);\r\n        fetchAllData(); // Re-fetch all data after new submission\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;  // Show loading state\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Eco Tracking Dashboard</h2>\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    {error}\r\n                    <button onClick={fetchAllData}>Retry</button>\r\n                </div>\r\n            )}\r\n            {/* Render the general eco chart */}\r\n            <EcoChart ecoData={ecoData} />\r\n\r\n            {/* Conditionally render the daily progress chart if data is available */}\r\n            {dailyProgress.length > 0 ? (\r\n                <DailyProgressChart data={dailyProgress} />\r\n            ) : (\r\n                <div>No daily progress data available.</div>\r\n            )}\r\n\r\n            {/* Render the form to submit new eco tracking data */}\r\n            <EcoTrackingForm onSubmitSuccess={handleSubmitSuccess} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}