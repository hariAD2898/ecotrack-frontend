{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wande\\\\Documents\\\\Assessment\\\\B9IS109-Eco-Track-System\\\\EcoTrack System\\\\ecotrack-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport EcoChart from './EcoChart'; // Assuming this chart handles general eco data\nimport DailyProgressChart from './DailyProgressChart'; // New chart for daily progress\nimport EcoTrackingForm from './EcoTrackingForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [ecoData, setEcoData] = useState([]);\n  const [dailyProgress, setDailyProgress] = useState([]); // State for daily progress data\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const recordActivity = activity => {\n    console.log('Recording activity:', activity);\n  };\n  const fetchEcoData = async () => {\n    const token = localStorage.getItem('accessToken');\n    if (!token) {\n      navigate('/auth');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:8000/api/eco-tracking/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEcoData(response.data);\n    } catch (error) {\n      console.error('Error fetching eco data:', error);\n      handleError(error);\n    }\n  };\n  const fetchDailyProgress = async () => {\n    const token = localStorage.getItem('accessToken');\n    if (!token) {\n      navigate('/auth');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:8000/api/eco-tracking/daily-progress/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setDailyProgress(response.data);\n    } catch (error) {\n      console.error('Error fetching daily progress:', error);\n      handleError(error);\n    }\n  };\n  const handleError = error => {\n    recordActivity({\n      error: error.response ? error.response.data : 'Unknown error',\n      status: error.response ? error.response.status : 'No status',\n      message: error.message,\n      timestamp: new Date().toISOString()\n    });\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          setError('Session expired. Please log in again.');\n          navigate('/auth');\n          break;\n        case 403:\n          setError('Access denied. You do not have permission to view this data.');\n          navigate('/auth');\n          break;\n        default:\n          setError('Failed to fetch eco data. Please try again.');\n      }\n    } else {\n      setError('Network error. Please check your connection.');\n    }\n  };\n  useEffect(() => {\n    fetchEcoData();\n    fetchDailyProgress(); // Fetch daily progress data\n  }, [navigate]);\n  const handleSubmitSuccess = newData => {\n    setEcoData(prevData => [...prevData, newData]);\n    fetchDailyProgress(); // Re-fetch daily progress after new entry\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Eco Tracking Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchEcoData(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(EcoChart, {\n      ecoData: ecoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DailyProgressChart, {\n      data: dailyProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(EcoTrackingForm, {\n      onSubmitSuccess: handleSubmitSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"hCr+faNToKTPessKf6xpEykXUM4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","EcoChart","DailyProgressChart","EcoTrackingForm","jsxDEV","_jsxDEV","Dashboard","_s","ecoData","setEcoData","dailyProgress","setDailyProgress","loading","setLoading","error","setError","navigate","recordActivity","activity","console","log","fetchEcoData","token","localStorage","getItem","response","get","headers","Authorization","data","handleError","fetchDailyProgress","status","message","timestamp","Date","toISOString","handleSubmitSuccess","newData","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmitSuccess","_c","$RefreshReg$"],"sources":["C:/Users/wande/Documents/Assessment/B9IS109-Eco-Track-System/EcoTrack System/ecotrack-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport EcoChart from './EcoChart';  // Assuming this chart handles general eco data\r\nimport DailyProgressChart from './DailyProgressChart';  // New chart for daily progress\r\nimport EcoTrackingForm from './EcoTrackingForm';\r\n\r\nconst Dashboard = () => {\r\n    const [ecoData, setEcoData] = useState([]);\r\n    const [dailyProgress, setDailyProgress] = useState([]); // State for daily progress data\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const recordActivity = (activity) => {\r\n        console.log('Recording activity:', activity);\r\n    };\r\n\r\n    const fetchEcoData = async () => {\r\n        const token = localStorage.getItem('accessToken');\r\n\r\n        if (!token) {\r\n            navigate('/auth');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/api/eco-tracking/', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setEcoData(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching eco data:', error);\r\n            handleError(error);\r\n        }\r\n    };\r\n\r\n    const fetchDailyProgress = async () => {\r\n        const token = localStorage.getItem('accessToken');\r\n\r\n        if (!token) {\r\n            navigate('/auth');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/api/eco-tracking/daily-progress/', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setDailyProgress(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching daily progress:', error);\r\n            handleError(error);\r\n        }\r\n    };\r\n\r\n    const handleError = (error) => {\r\n        recordActivity({\r\n            error: error.response ? error.response.data : 'Unknown error',\r\n            status: error.response ? error.response.status : 'No status',\r\n            message: error.message,\r\n            timestamp: new Date().toISOString(),\r\n        });\r\n\r\n        if (error.response) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    setError('Session expired. Please log in again.');\r\n                    navigate('/auth');\r\n                    break;\r\n                case 403:\r\n                    setError('Access denied. You do not have permission to view this data.');\r\n                    navigate('/auth');\r\n                    break;\r\n                default:\r\n                    setError('Failed to fetch eco data. Please try again.');\r\n            }\r\n        } else {\r\n            setError('Network error. Please check your connection.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEcoData();\r\n        fetchDailyProgress();  // Fetch daily progress data\r\n    }, [navigate]);\r\n\r\n    const handleSubmitSuccess = (newData) => {\r\n        setEcoData((prevData) => [...prevData, newData]);\r\n        fetchDailyProgress(); // Re-fetch daily progress after new entry\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Eco Tracking Dashboard</h2>\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    {error}\r\n                    <button onClick={() => fetchEcoData()}>Retry</button>\r\n                </div>\r\n            )}\r\n            <EcoChart ecoData={ecoData} />\r\n            <DailyProgressChart data={dailyProgress} /> {/* New daily progress chart */}\r\n            <EcoTrackingForm onSubmitSuccess={handleSubmitSuccess} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}