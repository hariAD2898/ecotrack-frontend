{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wande\\\\Documents\\\\Assessment\\\\B9IS109-Eco-Track-System\\\\EcoTrack System\\\\ecotrack-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport EcoChart from './EcoChart'; // Import the chart component we'll use later\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [ecoData, setEcoData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchEcoData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/eco-tracking/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEcoData(response.data);\n      } catch (error) {\n        console.error('Error fetching eco data:', error);\n\n        // Record the error details for future analysis\n        recordActivity({\n          error: error.response ? error.response.data : 'Unknown error',\n          status: error.response ? error.response.status : 'No status',\n          message: error.message,\n          timestamp: new Date().toISOString()\n        });\n        if (error.response.status === 403) {\n          navigate('/auth'); // If forbidden, redirect to login\n        }\n      }\n    };\n    fetchEcoData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Eco Tracking Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EcoChart, {\n      ecoData: ecoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"LIHdBerRgSNncjBr69SNzOlvxrw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","EcoChart","jsxDEV","_jsxDEV","Dashboard","_s","ecoData","setEcoData","navigate","fetchEcoData","response","get","headers","Authorization","token","data","error","console","recordActivity","status","message","timestamp","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wande/Documents/Assessment/B9IS109-Eco-Track-System/EcoTrack System/ecotrack-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport EcoChart from './EcoChart'; // Import the chart component we'll use later\r\n\r\nconst Dashboard = () => {\r\n    const [ecoData, setEcoData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchEcoData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/eco-tracking/', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                setEcoData(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching eco data:', error);\r\n        \r\n                // Record the error details for future analysis\r\n                recordActivity({\r\n                    error: error.response ? error.response.data : 'Unknown error',\r\n                    status: error.response ? error.response.status : 'No status',\r\n                    message: error.message,\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n        \r\n                if (error.response.status === 403) {\r\n                    navigate('/auth');  // If forbidden, redirect to login\r\n                }\r\n            }\r\n        };\r\n        \r\n\r\n        fetchEcoData();\r\n    }, [navigate]);\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Eco Tracking Dashboard</h2>\r\n            <EcoChart ecoData={ecoData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,yCAAyC,EAAE;UACxEC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUC,KAAK;UAClC;QACJ,CAAC,CAAC;QACFP,UAAU,CAACG,QAAQ,CAACK,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;;QAEhD;QACAE,cAAc,CAAC;UACXF,KAAK,EAAEA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACK,IAAI,GAAG,eAAe;UAC7DI,MAAM,EAAEH,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACS,MAAM,GAAG,WAAW;UAC5DC,OAAO,EAAEJ,KAAK,CAACI,OAAO;UACtBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACtC,CAAC,CAAC;QAEF,IAAIP,KAAK,CAACN,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;UAC/BX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAE;QACxB;MACJ;IACJ,CAAC;IAGDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACIL,OAAA;IAAKqB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCtB,OAAA;MAAAsB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B1B,OAAA,CAACF,QAAQ;MAACK,OAAO,EAAEA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd,CAAC;AAACxB,EAAA,CAxCID,SAAS;EAAA,QAEMJ,WAAW;AAAA;AAAA8B,EAAA,GAF1B1B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}