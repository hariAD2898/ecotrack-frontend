{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wande\\\\Documents\\\\Assessment\\\\B9IS109-Eco-Track-System\\\\EcoTrack System\\\\ecotrack-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport EcoChart from './EcoChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [ecoData, setEcoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const recordActivity = activity => {\n    console.log('Recording activity:', activity);\n  };\n  useEffect(() => {\n    const fetchEcoData = async () => {\n      const token = localStorage.getItem('accessToken');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:8000/api/eco-tracking/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEcoData(response.data);\n      } catch (error) {\n        console.error('Error fetching eco data:', error);\n        recordActivity({\n          error: error.response ? error.response.data : 'Unknown error',\n          status: error.response ? error.response.status : 'No status',\n          message: error.message,\n          timestamp: new Date().toISOString()\n        });\n\n        // Handle different status codes for more specific feedback\n        if (error.response) {\n          switch (error.response.status) {\n            case 401:\n              setError('Session expired. Please log in again.');\n              navigate('/auth');\n              break;\n            case 403:\n              setError('Access denied. You do not have permission to view this data.');\n              navigate('/auth');\n              break;\n            default:\n              setError('Failed to fetch eco data. Please try again.');\n          }\n        } else {\n          setError('Network error. Please check your connection.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEcoData();\n  }, [navigate]);\n  const handleRetry = () => {\n    setError(null); // Clear the error message\n    setLoading(true); // Reset loading state\n    // fetchEcoData(); // Retry fetching the data\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Eco Tracking Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(EcoChart, {\n      ecoData: ecoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"dUflRk4W4n3L5uSQf5mVwv3TD7c=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","EcoChart","jsxDEV","_jsxDEV","Dashboard","_s","ecoData","setEcoData","loading","setLoading","error","setError","navigate","recordActivity","activity","console","log","fetchEcoData","token","localStorage","getItem","response","get","headers","Authorization","data","status","message","timestamp","Date","toISOString","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wande/Documents/Assessment/B9IS109-Eco-Track-System/EcoTrack System/ecotrack-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport EcoChart from './EcoChart';\r\n\r\nconst Dashboard = () => {\r\n    const [ecoData, setEcoData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const recordActivity = (activity) => {\r\n        console.log('Recording activity:', activity);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchEcoData = async () => {\r\n            const token = localStorage.getItem('accessToken');\r\n\r\n            if (!token) {\r\n                navigate('/auth');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/eco-tracking/', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                setEcoData(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching eco data:', error);\r\n                recordActivity({\r\n                    error: error.response ? error.response.data : 'Unknown error',\r\n                    status: error.response ? error.response.status : 'No status',\r\n                    message: error.message,\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n\r\n                // Handle different status codes for more specific feedback\r\n                if (error.response) {\r\n                    switch (error.response.status) {\r\n                        case 401:\r\n                            setError('Session expired. Please log in again.');\r\n                            navigate('/auth');\r\n                            break;\r\n                        case 403:\r\n                            setError('Access denied. You do not have permission to view this data.');\r\n                            navigate('/auth');\r\n                            break;\r\n                        default:\r\n                            setError('Failed to fetch eco data. Please try again.');\r\n                    }\r\n                } else {\r\n                    setError('Network error. Please check your connection.');\r\n                }\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEcoData();\r\n    }, [navigate]);\r\n\r\n    const handleRetry = () => {\r\n        setError(null); // Clear the error message\r\n        setLoading(true); // Reset loading state\r\n        // fetchEcoData(); // Retry fetching the data\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Eco Tracking Dashboard</h2>\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    {error}\r\n                    <button onClick={handleRetry}>Retry</button> {/* Retry button */}\r\n                </div>\r\n            )}\r\n            <EcoChart ecoData={ecoData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}